#[filament_switch_sensor switch_sensor1]
#switch_pin: EBBCan:PC13
#[filament_switch_sensor material_0]
#switch_pin: PF1
#断料检测代码,此代码会直接用另一个耗材代替当前已经耗尽的耗材,实现无缝切换
[filament_switch_sensor filament_switch]
#detection_length: 5.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
#extruder:extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: EBBCan:PC13
pause_on_runout: False #pause handled by macro
runout_gcode:  
##以下代码通过针对runout变量的判断来决定是否激活续料程序
##优势，断料检测和耗材切换检测只通过一个微动开关实现
##注意：在ams_lite程序调试完毕之前，请勿激活此处代码。
    {% set runout= printer['gcode_macro var']['runout'] %}				##获取var中的runout（处于change_tool状态下为1）默认为0
    {% set tt0= printer['gcode_macro var']['tt0'] %}
    {% set tt1= printer['gcode_macro var']['tt1'] %}
    {% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {% set svvc = svv.currentextruder %}     
  
                {% if runout == 2 %}                                   
                     pause                                             ##如果在打印中，先触发暂停
                     {% if svvc == 1 %}  
                        {action_respond_info("耗材 %s 耗尽，即将切换到0号位耗材" % (svvc))}    
                        SAVE_VARIABLE VARIABLE=currentextruder VALUE=0 ##用文件记记录下当前的挤出机号，便于下次使用
                        M109 S{tt0}
                        jinliao IN_NUM={0}                           
                     {% else %} 
                        {action_respond_info("耗材 %s 耗尽，即将切换到1号位耗材" % (svvc))}     
                        SAVE_VARIABLE VARIABLE=currentextruder VALUE=1 ##用文件记录下当前的挤出机号，便于下次使用
                        M109 S{tt1}
                        jinliao IN_NUM={1}  
                     {% endif %}	
                {% endif %}	

insert_gcode:
    #PURGE
    #Wipe_nozzle
    #M117 Resuming
    #RESUME
event_delay: 2.0
#pause_delay: 0.5
