#####################################################################
#   Macros
#####################################################################
[gcode_macro PID_extruder]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=200

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[delayed_gcode welcome]
initial_duration: 5
gcode:
    M117 HAPPY PRINTING! NEVER FAILED!
    get_Last_Extruder
    #SET_KINEMATIC_POSITION
    #SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE=extruder

[gcode_macro _start_state]
description: 初始加载参数，根据需要修改
variable_state: 0  #初始状态，防止默认的T0误触发换色
variable_t0: 225
variable_t1: 205
gcode:

[gcode_macro get_Last_Extruder]
gcode:
    {% set svv = printer.save_variables.variables %}
    { action_respond_info("Last Extruder: %s" % (svv.currentextruder) ) }
    { action_respond_info( "Extruder0 Temp: %.1f" % (printer["gcode_macro _start_state"].t0) ) }
    { action_respond_info( "Extruder1 Temp: %.1f" % (printer["gcode_macro _start_state"].t1) ) }
    { action_respond_info("Default Material Print Temperature" ) }
    { action_respond_info("Modify _start_state in macros.cfg if needed" ) }

[gcode_arcs]
resolution: 0.1

[exclude_object]

[save_variables]
filename: ~/klipper/config/variables.cfg
#   必须提供一个可以用来保存参数到磁盘的文件名。
#   例如 . ~/variables.cfg

[idle_timeout]
timeout: 1800

[gcode_macro PAUSE]                 #暂停打印
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(250) %}      #edit to your park position
    {% set y = params.Y|default(250) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    #OFF_sfs
    G92 E0
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000 

[gcode_macro RESUME]                # 恢复打印
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    G92 E0
    #ON_sfs

[gcode_macro CANCEL_PRINT]          #取消打印
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G92 E0
    #OFF_sfs
    G91
    G1 Z+5 F600
    G90
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    CANCEL_PRINT_BASE
    #SDCARD_RESET_FILE
    #BASE_CANCEL_PRINT

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 250   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 298   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 20.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 305  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 8  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:

#######################
#内置在切片软件里的前置代码,目的是让软件在切片时自动把需要的初始信息传送给打印机
#PrusaSlicer Start G-code
#START_PRINT BED=[first_layer_bed_temperature] HOTEND=[first_layer_temperature[initial_extruder]] INEXTRUDER=[initial_extruder]
#######################
[gcode_macro START_PRINT]
;default_parameter_PA: 0.04
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set INIT_EXTR = params.INEXTRUDER|default(0)|int %} #打印机第一个需要启用的耗材序号0或1
    {% set EXTRUDER_TEMP = params.HOTEND|default(200)|float %}
    {% set BED_TEMP = params.BED|default(50)|float %}

    SET_GCODE_VARIABLE MACRO=_start_state VARIABLE=state value=1 #一次性赋值变量,目的是为了避开切片软件自动生成的初始T0或T1
    #OFF_sfs
    BED_MESH_PROFILE LOAD=default   
    SET_NOZZLE_LEDS_ON

    M302;
    STATUS_HEATING
    M140 S{ BED_TEMP };
    M109 S150; wait for hotend to reach the temperature
    STATUS_HOMING
    #{% if printer.homed_axes != 'XYZ' %}
    G28 ;                       #Home All Axes
    #Z_TILT_ADJUST
    #{% endif %}
    M104 S{EXTRUDER_TEMP};Set Hotend Temperature  
    G1 Z0.5 F1000;Move Z Axis up
    G90;
    G1 X305 Y8 F2000
    # Set and wait for nozzle to reach temperature
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP}
    G92 E0
    STATUS_BUSY
    #SET_PRESSURE_ADVANCE ADVANCE={PA}
    #以下是逻辑判断,通过变量svv.currentextruder来判断最后一次使用得料和即将要打印得料,相同则直接进料,不同则先执行退料
    {% if svv.currentextruder==INIT_EXTR %} #与最后一次打印一致
        {% if INIT_EXTR==0 %}
            M117 Printer start with T0
            { action_respond_info("Start with T0") }
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE=extruder #同步挤出机
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE= #保险代码,防止另一个挤出机运动
        {% elif INIT_EXTR==1 %}
            M117 Printer start with T1
            { action_respond_info("Start with T1") }
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE=extruder #同步挤出机
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE= #保险代码,防止另一个挤出机运动
        {% endif %}
    {% else %} #与最后一次打印不一致
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=0 #设置断料检测不生效,否则回抽会误触发
        {% if svv.currentextruder==0 %}
              M117 Unloading T0
              { action_respond_info("Unloading T0") }
              SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE=extruder
              SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE= #保险代码,防止另一个挤出机运动
        {% elif svv.currentextruder==1 %}
              M117 Unloading T1
              { action_respond_info("Unloading T1") }
              SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE=extruder
              SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE= #保险代码,防止另一个挤出机运动
        {% endif %}
        CUTTING_FIL
        G0 X290 Y0 F2500
        UNLOAD
        Switch_extruder
        LOAD_FILAMENT   #无论T0还是T1都需要把料送到热端,所以,在更新好同步关系以后就执行这步送料
        PUSH_FILAMENT_TO_HOTEND #远近程挤出机同步把耗材推送到热端
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=1 #断料检测生效
        PURGE #多挤出一段耗材以便于打印的颜色纯净
    {% endif %}
    STATUS_BUSY
    G92 E0;
    ;G1 E-0.8;
    #ON_sfs
    G90
    G0 X290 Y18
    G0 Y68 F2000;
    G0 Y18;
    G0 Y68;
    G0 X305 Y8;
    G92 E0 ;Reset Extruder
    G90

[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set svv = printer.save_variables.variables %}
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    SET_NOZZLE_LEDS_OFF
    M400                           ; wait for buffer to clear
    #OFF_sfs
    G0 Z{z_safe} ; move nozzle to remove stringing
    G92 E0               ; zero the extruder
    G1 E-5 F1000
    Wipe_nozzle
    TURN_OFF_HEATERS 
    ;G0 X{th.axis_maximum.x} Y8 F3600
    TIMELAPSE_TAKE_FRAME  #take a frame at the end when nozzle move out of screen
    M107                                     ; turn off fan
    M300
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M84

[gcode_macro PARK_MACRO]
gcode:
    M117 PARKING..
    G91
    #G1 E-3.14 F1500
    G1 Z5 
    G90
    G1 X250 Y280 F2500
	
        
[gcode_macro M600]
#rename_existing:M600.1
gcode:
	PAUSE_MACRO
	#UNLOAD

[gcode_macro PAUSE_MACRO]
gcode:
	PAUSE
	PARK_MACRO

[pause_resume]
recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#清除残余耗材
[gcode_macro PURGE]
gcode:
  STATUS_CLEANING
  M117 PURGING..
  G91
  G1 E15 F300
  G1 E-1
  G90

#卸载耗材
[gcode_macro UNLOAD]
gcode:
  M117  UNLOADING...
  G91
  G1 E-85 F1500 ;815 NOT ENOUGH
  G90

#装填耗材
[gcode_macro LOAD_FILAMENT]
gcode:
  M117  LOAD_FILAMENT...
  G91
  G1 E50.0 F1500 ;800
  G90

#把装填好的耗材从近程挤出机位置推到热端口
[gcode_macro PUSH_FILAMENT_TO_HOTEND]
gcode:
  M117  PUSH_FILAMENT_TO_HOTEND...
  G91
  G1 E50.0 F800
  G90


[gcode_macro RESUME_MACRO]
gcode:
  M117  RESUMING...
  RESUME


#切料,然后把料抽到Cw2的进料口     
[gcode_macro CUTTING_FIL]
description: 使用切到切断耗材 by muimoon
variable_cut_x: 12         #切断的极限位置X
variable_cut_safe: 18      #从切断到恢复至安全位置的位移量
variable_cut_y: 0          #切断的极限位置Y
variable_cut_retract: -0.2   #切断以后需要将耗材回抽一小段来帮助刀片回弹
gcode:  M117  Cutting
    G90
    G0 X{cut_x+cut_safe} Y{cut_y} F3000
    G0 X{cut_x} F3000
    G1 E{cut_retract} F3000   
    G0 X{cut_x+cut_safe} F3000
    G4 P200
    G92 E0

#擦喷嘴   
[gcode_macro Wipe_nozzle]
description: 擦拭喷嘴 -by:FZai V1.0 modify by muimoon
variable_ptfe_x: 215.7         #喷嘴在四氟管正上方并接触时的X轴坐标
variable_ptfe_y: 305           #喷嘴在四氟管正上方并接触时的Y轴坐标（尽量靠近左侧螺丝孔圆心，且要大于1）
#variable_ptfe_z: 4.0          #喷嘴在四氟管正上方并接触时的Z轴坐标
variable_retract_l: 0.8        #正常回抽长度(就是切片软件里填的回抽长度)
#variable_safe_z: 8             #挤出头前往擦拭点时的Z轴安全高度

#以下参数通常不需要修改
variable_wipe_qty: 2           #擦拭次数
variable_wipe_wide: 10         #擦拭时喷头移动宽度
#variable_wipe_drop: 1         #擦拭时喷嘴下降距离
#variable_retract_m: 1.5       #回抽倍数（值应在1~2之间，耗材粘性越大则该值越大）
#以下参数不要动！ 不要动！ 不要动！
variable_extrusion_dist: 34.3 #四氟管与耗材挤出点的距离（在螺钉上挤出一坨）

gcode:  M117  Wipe_nozzle
    G90 #absolute positioning
    G83 #挤出机使用相对定位
#    G1 E{retract_l]} F2000
 ##------移动到挤出点
    G0 X{ptfe_x + extrusion_dist} Y{ptfe_y - 7} F6000
    G4 P4000            #驻留：G4 P<毫秒> #8000
 ##------擦拭喷嘴
     {% for wipes in range(1, (wipe_qty + 2)) %}
        G1 X{ptfe_x + extrusion_dist - 2} F8000
        G1 X{ptfe_x + extrusion_dist + 2} F8000
     {% endfor %}
    G0 Y{ptfe_y} F6000
     {% for wipe in range(1, (wipe_qty + 2)) %}
        G1 X{ptfe_x - wipe_wide} F4000
        G1 X{ptfe_x + wipe_wide} F4000
     {% endfor %}
    G0 X{ptfe_x + extrusion_dist} Y{ptfe_y - 7} F6000
 
#####################################################################
#End G-code for Slicer Filament
#####################################################################       
#G1 E-5.0 F3000

[gcode_macro T0]
gcode:
    #判断语句,目的是为了避开切片软件自动生成的初始T0
    {% if printer["gcode_macro _start_state"].state==0 %}
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=0 #关闭断料检测
        #OFF_sfs
        G92 E0
        CUTTING_FIL
        UNLOAD
        Switch_extruder
        G0 X250 Y298
        LOAD_FILAMENT
        PUSH_FILAMENT_TO_HOTEND
        PURGE
        Wipe_nozzle
        G92 E0
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=1 #打开断料检测
        #ON_sfs
    {% else %}
        SET_GCODE_VARIABLE MACRO=_start_state VARIABLE=state value=0
    {% endif %}    

[gcode_macro T1]
gcode:
    #判断语句,目的是为了避开切片软件自动生成的初始T1
    {% if printer["gcode_macro _start_state"].state==0 %}
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=0 #关闭断料检测
        #OFF_sfs
        G92 E0 
        CUTTING_FIL
        UNLOAD
        Switch_extruder
        G0 X250 Y298
        LOAD_FILAMENT
        PUSH_FILAMENT_TO_HOTEND
        PURGE
        Wipe_nozzle
        G92 E0
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_ebb ENABLE=1 #打开断料检测
        #ON_sfs
    {% else %}
        SET_GCODE_VARIABLE MACRO=_start_state VARIABLE=state value=0
    {% endif %}

[gcode_macro Switch_extruder]
gcode:
      {% set svv = printer.save_variables.variables %}
      {% if svv.currentextruder==0 %}
            M117 extruder switch to T1
            { action_respond_info("switch to T1") }
            M104 S{printer["gcode_macro _start_state"].t1}
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE=
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE=extruder
            SAVE_VARIABLE VARIABLE=currentextruder VALUE='1' #触发外部文件记录当前的挤出机号1
      {% elif svv.currentextruder==1 %}
            M117 extruder switch to T0
            { action_respond_info("extruder switch to T0") }
            M104 S{printer["gcode_macro _start_state"].t0}
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper1 MOTION_QUEUE=
            SYNC_EXTRUDER_MOTION EXTRUDER=my_extra_stepper MOTION_QUEUE=extruder
            SAVE_VARIABLE VARIABLE=currentextruder VALUE='0'  #触发外部文件记录当前的挤出机号0
      {% endif %}

[gcode_macro ON_sfs]
gcode:
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1

[gcode_macro OFF_sfs]
gcode:
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0

[gcode_macro M300]
#print Finish
gcode:  
 {% for beeper in range(1, 3) %}
        SET_PIN PIN=beeper VALUE=1
        G4 P200
        SET_PIN PIN=beeper VALUE=0
        G4 P100
 {% endfor %}
        
[gcode_macro M301]
#Filament runout
gcode:  
 {% for beeper in range(1, 5) %}
        SET_PIN PIN=beeper VALUE=1
        G4 P200
        SET_PIN PIN=beeper VALUE=0
        G4 P100
 {% endfor %}

[gcode_macro M302]
#print start
gcode:  SET_PIN PIN=beeper VALUE=1
        G4 P200
        SET_PIN PIN=beeper VALUE=0
        G4 P100

##  Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"