##以下代码通过针对runout变量的判断来决定是否激活续料程序
##优势，断料检测和耗材切换检测只通过一个微动开关实现
##注意：在ams_lite程序调试完毕之前，请勿激活以下代码。
[filament_switch_sensor INOUT]	#耗材开关传感器。支持使用开关传感器（如限位开关）进行耗材插入和耗尽检测。
#pause_on_runout: False		    #请注意, 如果 pause_on_runout 为 False 并且没有定义
#event_delay: 7                #事件之间的最小延迟时间（秒）,在这个时间段内触发的事件将被默许忽略。
#switch_pin:PG11                 #连接到检测开关的引脚。
runout_gcode:  
    {% set runout= printer['gcode_macro var']['runout'] %}				##获取var中的runout（处于change_tool状态下为1）默认为0
    {% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {% set svvc = svv.currentextruder %}     
  
    {% if runout == 2 %}                                   
       pause                                            
       {action_respond_info("耗材 %s 耗尽，即将切换到指定位置耗材" % (svvc))} 
       {action_respond_info("Filament %s runout, will choose instead tunnel" % (svvc))}
       M117 Filament runout
       I{svvc}                   
    {% endif %}	

#需要根据实际通道数量更新
[gcode_macro reset_continue]
gcode:
    SAVE_VARIABLE VARIABLE=continue0 VALUE=0
    SAVE_VARIABLE VARIABLE=continue1 VALUE=0
    SAVE_VARIABLE VARIABLE=continue2 VALUE=0
    SAVE_VARIABLE VARIABLE=continue3 VALUE=0
    SAVE_VARIABLE VARIABLE=continue4 VALUE=0
    #SAVE_VARIABLE VARIABLE=continueX VALUE=0

[gcode_macro I0]
gcode:
    {% set insteadof=printer["gcode_macro var"]['filament0'] %}
    SAVE_VARIABLE VARIABLE=continue0 VALUE=1       ##mark the tunnel 0 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    Set_Rotation{insteadof}
    tt{insteadof}
    jinliao IN_NUM={insteadof}

[gcode_macro I1]
gcode:
    {% set insteadof=printer["gcode_macro var"]['filament1'] %}
    SAVE_VARIABLE VARIABLE=continue1 VALUE=1       ##mark the tunnel 1 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    Set_Rotation{insteadof}
    tt{insteadof}
    jinliao IN_NUM={insteadof}

[gcode_macro I2]
gcode:
    {% set insteadof=printer["gcode_macro var"]['filament2'] %}
    SAVE_VARIABLE VARIABLE=continue2 VALUE=1       ##mark the tunnel 2 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    Set_Rotation{insteadof}
    tt{insteadof}
    jinliao IN_NUM={insteadof}

[gcode_macro I3]
gcode:
    {% set insteadof=printer["gcode_macro var"]['filament3'] %}
    SAVE_VARIABLE VARIABLE=continue3 VALUE=1       ##mark the tunnel 3 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    Set_Rotation{insteadof}
    tt{insteadof}
    jinliao IN_NUM={insteadof}

[gcode_macro I4]
gcode:
    {% set insteadof=printer["gcode_macro var"]['filament4'] %}
    SAVE_VARIABLE VARIABLE=continue4 VALUE=1       ###mark the tunnel 4 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    Set_Rotation{insteadof}
    tt{insteadof}
    jinliao IN_NUM={insteadof}

#模版X整个替换成新的通道号:   IX   filamentX  continueX
#[gcode_macro IX]
#gcode:
#   {% set insteadof=printer["gcode_macro var"]['filamentX'] %}
#    SAVE_VARIABLE VARIABLE=continueX VALUE=1       
#    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} 
#    Set_Rotation{insteadof}
#    tt{insteadof}
#    jinliao IN_NUM={insteadof}
