#usb-Klipper_lpc1769_1F00011205A5D7952F5A4662C22000F5-if00
# This file contains common pin mappings for the MuZi Xiaoyang AMS_lite.
#这是木子小阳的AMS_lite配置文件
# To use this config, the firmware should be compiled for the RP2040 with Klipper
#运行这个文件需要有刷好klipper的rp2040控制板
# after press "boot", connect rp2040 to PC, and copy the "klipper.uf2" file to it, wait for about 10~15s, then connect rp to your 3D-printer control board
#按下Boot然后连接rp2040到你的电脑,系统会识别出一个移动盘,把文件"klipper.uf2"复制到出现的移动盘里.静待10到15秒以后，就可以连接3D打印的上位机了
# See docs/Config_Reference.md for a description of parameters.
#详细描述文件请看Config_Reference.md

#以下配置段落需要根据事情情况修改
## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
##有待完善。。。。

################## 重要！！！ ########################
################## Important！！！########################
##请务必把下面的这行代码放到你自己的print_start gcode里！！！然后取消前面的#号注释
##please add below section to your print_start gcode, and delete the "#" at the same time, don't forget!!!
#   SET_GCODE_VARIABLE MACRO=var VARIABLE=state VALUE={1} ##更新为打印状态
#########################################################


[include Var.cfg]                #All custom variables included, 包含所有的自定义参数
[include Lite_haredware.cfg]
[include bug_fix.cfg]
[include Filament_buffer.cfg]
[include Filament_Continue.cfg]

[display_status]

[gcode_macro prepare_for_printing]
description:所有开始打印前的变量重置和状态设置代码，在starting_print代码最开始直接加入这个宏即可
gcode:
    	SET_GCODE_VARIABLE MACRO=var VARIABLE=state VALUE={1} ##更新为打印状态
        reset_continue
        buffer_start

[gcode_macro T0]                ##有几个通道就添加几个
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set con = svv.continue0 %}  
    {% if con == 1 %}  
       {action_respond_info("T0 intead tunnel used") }
       change_tool TOOL={printer["gcode_macro var"].filament0}
    {% else %} 
       change_tool TOOL=0
    {% endif %} 

[gcode_macro T1]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set con = svv.continue1 %}  
    {% if con == 1 %}  
       {action_respond_info("T1 intead tunnel used") }
       change_tool TOOL={printer["gcode_macro var"].filament1}
    {% else %} 
       change_tool TOOL=1
    {% endif %} 

[gcode_macro T2]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set con = svv.continue2 %}  
    {% if con == 1 %}
       {action_respond_info("T2 intead tunnel used") }
       change_tool TOOL={printer["gcode_macro var"].filament2}
    {% else %} 
       change_tool TOOL=2
    {% endif %} 

[gcode_macro T3]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set con = svv.continue3 %}  
    {% if con == 1 %}  
       {action_respond_info("T3 intead tunnel used") }
       change_tool TOOL={printer["gcode_macro var"].filament3}
    {% else %} 
       change_tool TOOL=3
    {% endif %} 

[gcode_macro T4]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set con = svv.continue4 %}  
    {% if con == 1 %}  
       {action_respond_info("T4 intead tunnel used") }
       change_tool TOOL={printer["gcode_macro var"].filament4}
    {% else %} 
       change_tool TOOL=4
    {% endif %} 


##如果要添加新通道请参考模板修改X的内容↓↓↓ TX   continueX  filamentX   TOOL=X
#[gcode_macro TX]
#gcode:
#    {% set svv = printer.save_variables.variables %}
#    {% set con = svv.continueX %}  
#    {% if con == 1 %}  
#       {action_respond_info("TX intead tunnel used") }
#       change_tool TOOL={printer["gcode_macro var"].filamentX}
#    {% else %} 
#       change_tool TOOL=X
#    {% endif %} 
##如果要添加新通道请参考模板修改X的内容↑↑↑

[gcode_macro breakout]
description:中断近程挤出机的工作
gcode:
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=    ##让进程挤出机停止工作

[gcode_macro reback]
description:恢复近程挤出机的工作
gcode:
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder    ##让进程挤出机恢复工作

[gcode_macro overwrite_Last_extruder]
description:把指定挤出机的序列号写入文件
gcode:
        {% set x= params.WAKEUP|default(0)|int %}  
        SAVE_VARIABLE VARIABLE=currentextruder VALUE={x}
        
[gcode_macro over_write_filament_instead_of]
description:							 	##中文注释
gcode:  
        {% set tu = params.TU|default(0)|int %}   
        {% set overwr = params.OVERWR|default(0)|int %}   
        SET_GCODE_VARIABLE MACRO=var VARIABLE=filament{tu} VALUE={overwr}
        
[gcode_macro moveout]
description:中断/初始化所有的远程送料电机
gcode:
        {% for num in range(0, (printer["gcode_macro var"].tunnel)) %}
           SYNC_EXTRUDER_MOTION EXTRUDER=t{num} MOTION_QUEUE=
        {% endfor %}

[gcode_macro wakeup]
description:唤醒近程挤出机与送料挤出机							 	##中文注释
gcode:  
        moveout                                                                               ##中断/初始化所有的远程送料电机
        {% set wakeup = params.WAKEUP|default(0)|int %}                                       ##获取需要唤醒的t{num}挤出机和进程挤出机
        SYNC_EXTRUDER_MOTION EXTRUDER=t{wakeup} MOTION_QUEUE=extruder                         ##唤醒t{num}挤出机
        SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={wakeup}                   ##修改当前耗材的值
        reback     

[gcode_macro wakemove]
description:仅唤醒送料挤出机（近程挤出机不工作）					           ##中文注释
gcode:  
        moveout                                                                                ##中断/初始化所有的远程送料电机
        breakout                                                                               ##让进程挤出机停止工作
        {% set wakemove = params.WAKEMOVE|default(0)|int %}                                    ##获取需要唤醒的t{num}挤出机
        SYNC_EXTRUDER_MOTION EXTRUDER=t{wakemove} MOTION_QUEUE=extruder

[gcode_macro CUT]
description: 使用切到切断耗材 by muimoon
variable_cut_x: -2         #切断的极限位置X
variable_x_max: 20        #x滑车安全移出的极限位置，默认为x方向最大值
variable_cut_safe: 15      #从切断到恢复至安全位置的位移量
variable_cut_y: 0          #切断的极限位置Y
variable_cut_z: 5         #安全的抬升z
variable_cut_retract: -0.5   #切断以后需要将耗材回抽一小段来帮助刀片回弹
gcode:  
    {% set act_z = printer.toolhead.position.z|float %} #记录当前高度
    M117  Cutting
    G1 E{-1} F3000 
    G91
    G1 z{cut_z} F2000 #抬高
    G90
    G0 X{x_max} F15000 #这里让喷嘴先滑出打印平台
    G0 Y{cut_y} F10000 #沿平台外缘移动
    G0 X{cut_x+cut_safe} F15000 #到达安全位置准备切
    G0 X{cut_x} F3000 #切
    G1 E{cut_retract} F3000 #回抽
    G0 X{cut_x+cut_safe} F3000 #再次回到安全位置
    G4 P200
    G92 E0
    G0 X{x_max} F15000  #沿平台外缘移动
    G28 X0 Y0
    G0 z{act_z} F2000 #高度还原                                                                     ##！！！！！！请注意根据个人的切刀位置来修改本段宏文件！！！！！！

#擦喷嘴   
[gcode_macro Wipe_nozzle]
description: 擦拭喷嘴 -by:FZai V1.0 modify by muimoon
variable_ptfe_x: 200         #喷嘴在四氟管正上方并接触时的X轴坐标
variable_ptfe_y: 0           #喷嘴在四氟管正上方并接触时的Y轴坐标（尽量靠近左侧螺丝孔圆心，且要大于1）
#variable_ptfe_z: 4.0          #喷嘴在四氟管正上方并接触时的Z轴坐标
variable_retract_l: 1        #正常回抽长度(就是切片软件里填的回抽长度)
#variable_safe_z: 8             #挤出头前往擦拭点时的Z轴安全高度

#以下参数通常不需要修改
variable_wipe_qty: 2           #擦拭次数
variable_wipe_wide: 10         #擦拭时喷头移动宽度
#variable_wipe_drop: 1         #擦拭时喷嘴下降距离
#variable_retract_m: 1.5       #回抽倍数（值应在1~2之间，耗材粘性越大则该值越大）
#以下参数不要动！ 不要动！ 不要动！
variable_extrusion_dist: 37.3 #34.3 #四氟管与耗材挤出点的距离（在螺钉上挤出一坨）

gcode:  M117  Wipe_nozzle
    G90 #absolute positioning
    G83 #挤出机使用相对定位
#    G1 E{retract_l]} F2000
 ##------移动到挤出点
    G0 X{ptfe_x + extrusion_dist} Y{ptfe_y - 15} F15000
 ##------擦拭喷嘴
    G4 P8000            #驻留：G4 P<毫秒> #8000
     {% for wipes in range(1, (wipe_qty + 2)) %}
        G1 X{ptfe_x + extrusion_dist - 2} F8000
        G1 X{ptfe_x + extrusion_dist + 2} F8000
     {% endfor %}
    G0 Y{ptfe_y} F6000
     {% for wipe in range(1, (wipe_qty + 2)) %}
        G1 X{ptfe_x - wipe_wide} F4000
        G1 X{ptfe_x + wipe_wide} F4000
     {% endfor %}
    G0 X{ptfe_x + extrusion_dist} Y{ptfe_y - 15} F6000
    
[gcode_macro CHANGE_TOOL]
variable_nownum:0
gcode:                              
    {% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {% set svvc = svv.currentextruder %}                                            #变量名长度优化
    {% set TOOL = params.TOOL|default(nownum)|int %}                                    ##选择喷头
    {action_respond_info("当前选择为 %d号位耗材" % (TOOL))}                               ##显示文本
    {% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}         ##inout状态，判断耗材是否加载至喷头处
    {% set state= printer['gcode_macro var']['state'] %}				##获取var中的state（处于打印任务时state=1，未处于打印任务时state=0）默认为0

    SET_GCODE_VARIABLE MACRO=var VARIABLE=runout VALUE={1} ##更新为进入change_tool命令

    colorhotup  #将进料和退料的加热代码，无论是否打印过程中，触发change_tool，都会进行温度判断

    buffer_OFF
    {% if state == 0 %}  
        {% if printer.homed_axes != 'XYZ' %}                          ##保护代码，防止非打印过程中的切换直接撞墙(因为我开机就启动了强制移动的代码)
              G28            #Home
        {% endif %}                                                    
    {% endif %} 
   
    {% if inout == 0 %}                                               ##如果进程挤出机没有进料的话
                {% if state == 1 %}  
                    pause                                             ##如果在打印中，先触发暂停
                {% endif %}	
                jinliao IN_NUM={TOOL}                                 ##加载选中的耗材                                                    
    {% else %}                                                        ##如果进程挤出机已经加载耗材的情况
          {% if TOOL != svvc %}                                       ##如果不等于断电时的耗材情况   
                {% if state == 1 %}   
                    pause                                             ##如果在打印中，先触发暂停
                {% endif %}	
                {action_respond_info("耗材从 %s 切换到 %s 号位耗材" % (svvc, TOOL))}
                wakeup WAKEUP={svvc}                                  ##唤醒近程挤出机与断电时的挤出机	
                cut                                                   ##切刀
                tuiliao OUT_NUM={svvc}                                ##退出上次耗材
                G4 P200                                               ##留给断料检测传感器的检测延迟
                jinliao IN_NUM={TOOL}                                 ##加载本次耗材
          {% else %}                                                  ##如果等于断电时的耗材情况,即不用触发耗材的切换程序,直接使用即可
                wakeup WAKEUP={TOOL}                                  ##唤醒近程挤出机与tool挤出机
                {action_respond_info("目前加载的正是 %d 号位耗材" % (TOOL))}
          {% endif %}
     {% endif %}

     SAVE_VARIABLE VARIABLE=currentextruder VALUE={TOOL}              #耗材切换完成，最后触发外部文件并记录当前的挤出机TOOL的num号，mm
     Set_Rotation{TOOL}                                               #耗材切换完成，最后触发外部文件并记录当前的挤出机的rotation_distance，mm

     {% if state == 1 %}                                   
          SET_GCODE_VARIABLE MACRO=var VARIABLE=runout VALUE={2}      ##更新为change_tool命令结束，命令只触发于打印阶段    
          buffer_start    ##激活缓冲器
     {% endif %}    

[gcode_macro jinliao]
description:四模块进料								 							     ##中文注释
variable_tnum:0										  								##用于临时存储变量      
gcode:
    {% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {% set svvc = svv.currentextruder %}                                            #变量名长度优化
	moveout											  								##初始化所有远近挤出机
    {% set tnum = params.IN_NUM|default(0)|int %}									##设置变量tnum用于选择预进料电机t0,t1,t2....
	{action_respond_info("当前为 %d号位颜色进料" % (tnum))}							  ##显示目前选择的通道数量
	{% set state= printer['gcode_macro var']['state'] %}							##获取var中的state（处于任务时state=1，未处于任务时state=0）默认为0
	{% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}  	##设置变量inout获取近程挤出机是否进料
    
	{% if inout == 1 %}																##判断inout是否进料（1是进料，0是没进料）
        SAVE_VARIABLE VARIABLE=tempextruder VALUE={tnum}          ##引入新的存盘变量，尽量让bug程序独立于主程序以外。New parameter insert, to make the bug marco indepandent. 
        M306
    	{action_respond_info("进料失败，已有耗材存在，请先完成 %d 退料,再点击继续"% (svvc))}		##显示请先完成退料（因为已经加载耗材了，就无法在加载耗材了）
        M117 hotend material exist, can't load another,or unloading manually
        buffer_off
        prevent_idle IN_NUM={tnum}            ##故障排除宏，持续更新中 bug_fix marco, need to update later
	{% else %}																		##如果近程挤出机没有加载耗材
        {action_respond_info("正在为您加载 %d号位耗材" % (tnum))}			  ##显示正在加载耗材
        wakeup WAKEUP={tnum}  
  	 	G92 E0
  	 	G1 E{printer["gcode_macro var"].s0} F{printer["gcode_macro var"].speed0}	##t0挤出机以s0的距离，speed0的速度工作
	    {action_respond_info("当正在为您加载 %d号位耗材:二次确认" % (tnum))}				   ##显示文本二次确认
	    UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						##启动延时GCODE，方便持续检测
	{% endif %}

[delayed_gcode jinliao]
initial_duration: 0
gcode:
	 {% set state= printer['gcode_macro var']['state'] %}								##获取var中的state（处于任务时state=1，未处于任务时state=0）默认为0
	 {% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}		##设置变量inout获取近程挤出机是否进料
 	 	{% if inout == 0  %}          													##如果近程挤出没有检测到耗材，强制刷新持续时长
                UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
  	  		    G92 E0
  	  		    G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
                {action_respond_info("进料中......")}
                M117 loading......
                G4 P100
	  	{% else %}   
            {action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
            M117 Load successful!!!
            G92 E0
            G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
            UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
            M117 Printing...
			{% if state == 1 %}															##如果打印机处于任务中
                G92 E0
                G1 E{printer["gcode_macro var"].purge} F200     
                Wipe_nozzle
    			resume																		##恢复打印
			{% endif %}
		{% endif %}

[gcode_macro tuiliao]
description:四模块退料								 	##中文注释
variable_tnum:0
gcode:
	moveout																			##初始化所有远近挤出机
    {% set tnum = params.OUT_NUM|default(0)|int %}									##设置变量tnum用于选择预进料电机t0,t1,t2....
	{action_respond_info("当前退料为 %d号位颜色" % (tnum))}							  ##显示目前退出通道
	{% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}  	##设置变量inout获取近程挤出机是否进料

        {action_respond_info("正在为您退出 %d号位耗材" % (tnum))}		  				  ##显示正在为你退出某耗材
        M117 unloading...
	    G92 E0
        wakeup WAKEUP={tnum}																	##同时唤醒ex与t0挤出机同步工作
	    G1 E{printer["gcode_macro var"].outs} F{printer["gcode_macro var"].outspeed}	##t0挤出机以outs的距离，outspeed的速度工作

##########################################################################################################################
##预升温↓↓↓↓↓↓##
##########################################################################################################################
[gcode_macro colorhotup]
description:多色系统喷头升温								 ##中文注释
gcode:
	{% set temp = printer['gcode_macro var']['temp'] %}
	{% set PROBE_TEMP = temp %}                              ##设定打印头温度230
	{% set MAX_TEMP = PROBE_TEMP + 5 %}                     ##限制温度到上面那个温度加5度
	{% set ACTUAL_TEMP = printer.extruder.temperature %}    ##实际温度=打印机。喷头。当前温度            
	{% set TARGET_TEMP = printer.extruder.target %}         ##目标温度=打印机。喷头。目标温度          
	                   
	{% if TARGET_TEMP > PROBE_TEMP %}                     	##如果 目标温度》设定温度
        # { action_respond_info('设置目标温度 %.1fC 太高了, 正在降低至 %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
      	##显示文本(变量1，变量2)
        # M109 S{ PROBE_TEMP }									##温度为设定温度
	{% else %}
    	{% if ACTUAL_TEMP < PROBE_TEMP %}                   		 ##如果 实际温度<最低挤出温度
        	{action_respond_info('当前实际温度 %.1fC 太低了, 正在升温至 %.1fC' % (ACTUAL_TEMP, PROBE_TEMP)) }
        	##显示文本(变量1，变量2)
        	M109 S{ PROBE_TEMP }									##温度为设定温度
    	{% endif %}
	{% endif %}

##########################################################################################################################
##预升温↑↑↑↑↑↑##
##########################################################################################################################
##########################################################################################################################