####################################################################################
#                   缓冲器-开始
#  挤出机和同步挤出机需要校准，如果两个误差太大，适当调整[gcode_macro buffer]内的加减1.5为适合自己的值
#  在需要同步的地方加入buffer_start(一般是开始打印，恢复打印的宏里),开启与关闭缓冲器建议直接改成sensor on/off
####################################################################################
###参考木子小阳HCQ的原始代码###
###修复bug###
[filament_switch_sensor buffer]	#耗材开关传感器。支持使用开关传感器（如限位开关）进行耗材插入和耗尽检测。
pause_on_runout: False		    #请注意, 如果 pause_on_runout 为 False 并且没有定义
event_delay: 7.0                #事件之间的最小延迟时间（秒）,在这个时间段内触发的事件将被默许忽略。
switch_pin:^!PJ0                 #连接到检测开关的引脚。
runout_gcode:
    rotation_changed   # 加快挤出机速率
    UPDATE_DELAYED_GCODE ID=fastkeep DURATION=7  # 启用延时
insert_gcode:
##以下代码无法运行,重新用delay代码替代
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=t{svv.currentextruder} DISTANCE={svv.rd}

[delayed_gcode fastkeep]         
initial_duration: 0             
gcode:         
   {% if printer['filament_switch_sensor buffer'].filament_detected == 0 %}   ##如果不触发缓冲器
         UPDATE_DELAYED_GCODE ID=fastkeep DURATION=7                                    
   {% else %}        
         UPDATE_DELAYED_GCODE ID=fastkeep DURATION=0 # 终止延时
         rotation_revert # 还原挤出机速率
   {% endif %}  

[gcode_macro rotation_changed]
description: 获取当前通道的挤出机及其原始速率,然后给挤出机加速
gcode:
    {% set svv = printer.save_variables.variables %}   ###获取断电时候的耗材的序号 “0、1、2、3”
    Set_Rotation{svv.currentextruder} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=t{svv.currentextruder} DISTANCE={svv.rd - 1.5}
    {action_respond_info("set t%d fast %s"%(svv.currentextruder, svv.rd - 1.5))}   

[gcode_macro rotation_revert]
description: 获取当前通道的挤出机及其原始速率,还原挤出机
gcode:
    {% set svv = printer.save_variables.variables %} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=t{svv.currentextruder} DISTANCE={svv.rd}      

[gcode_macro buffer_start]
gcode:
      SET_FILAMENT_SENSOR SENSOR=buffer ENABLE=1
      rotation_changed
      UPDATE_DELAYED_GCODE ID=fastkeep DURATION=7

[gcode_macro buffer_OFF]
gcode:
      SET_FILAMENT_SENSOR SENSOR=buffer ENABLE=0
      UPDATE_DELAYED_GCODE ID=fastkeep DURATION=0

[gcode_macro Set_Rotation0]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set original = printer.configfile.settings['extruder_stepper t0'].rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}  #把最后一次激活的挤出的rotation记录在外部文件里

[gcode_macro Set_Rotation1]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set original = printer.configfile.settings['extruder_stepper t1'].rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}

[gcode_macro Set_Rotation2]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set original = printer.configfile.settings['extruder_stepper t2'].rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}

[gcode_macro Set_Rotation3]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set original = printer.configfile.settings['extruder_stepper t3'].rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}

[gcode_macro Set_Rotation4]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set original = printer.configfile.settings['extruder_stepper t4'].rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}