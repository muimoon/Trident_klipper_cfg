

[gcode_macro jinliao]
description:四模块进料								 							     ##中文注释
variable_tnum:0										  								##用于临时存储变量
variable_x:1
gcode:
	moveout											  								##初始化所有远近挤出机
	colorhotup										 	 							##预热模块宏文件
    {% set tnum = params.IN_NUM|default(0)|int %}									##设置变量tnum用于选择预进料电机t0,t1,t2....
	{action_respond_info("当前选择为 %d号位颜色" % (tnum))}							  ##显示目前选择的通道数量
	{% set state= printer['gcode_macro var']['state'] %}							##获取var中的state（处于任务时state=1，未处于任务时state=0）默认为0
	SET_GCODE_VARIABLE MACRO=jinliao VARIABLE=tnum VALUE={tnum}						##将刚获取的tnum存储至jinliao的tunm变量中，便于后面使用

	{% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}  	##设置变量inout获取近程挤出机是否进料
    {% set cbs0 = printer['filament_switch_sensor cbs0'].filament_detected  %}	 	##设置变量cbs0获取t0挤出机是否加载
    {% set cbs1 = printer['filament_switch_sensor cbs1'].filament_detected  %} 		##设置变量cbs1获取t1挤出机是否加载
	{% set cbs2 = printer['filament_switch_sensor cbs2'].filament_detected  %} 		##设置变量cbs2获取t2挤出机是否加载
    {% set cbs3 = printer['filament_switch_sensor cbs3'].filament_detected  %} 		##设置变量cbs3获取t3挤出机是否加载
	{% set x= printer['gcode_macro jinliao']['x'] %}

##不要动不要删，与结尾相连接
	{% if inout == 1 %}																##判断inout是否进料（1是进料，0是没进料）
    	{action_respond_info("请先完成退料")}										 ##显示请先完成退料（因为已经加载耗材了，就无法在加载耗材了）
	{% else %}																		##如果ex挤出机没有加载耗材
##不要动不要删 ，与结尾相连接

##选择电机t0↓↓↓↓↓↓↓↓↓↓↓↓  
	{% if tnum == 0 %}                                                          	##选择电机t0开始进料
        {% if cbs0 == 1 %}                                                      	##t0挤出机是否加载耗材
			{% if inout == 0 %}    													##如果ex挤出机没有加载耗材
            	{action_respond_info("正在为您加载 %d号位耗材" % (tnum))}			  ##显示正在加载耗材
	  	        	wakemove WAKEMOVE=0                                 			##仅唤醒t0挤出机工作
  	 	       		M83
  	 	       		G1 E{printer["gcode_macro var"].s0} F{printer["gcode_macro var"].speed0}	##t0挤出机以s0的距离，speed0的速度工作
					UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						##启动延时GCODE，方便持续检测
		    {% else %}   
					wakeup WAKEUP=0						 							##同时唤醒ex与t0挤出机同步工作
	 				UPDATE_DELAYED_GCODE ID=jinliao DURATION=0						##关闭延时GCODE（因为已经加载到位了）
			{% endif %}  
        {% else %}                                                              	##t0挤出机没有加载耗材的话
            		{action_respond_info("当前 %d号位没有加载耗材" % (tnum))}		  ##显示当前位置没有加载耗材
   		{% endif %}
	{% endif %}
####选择电机t0↑↑↑↑↑↑↑↑↑↑

##选择电机t1↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 1 %}                                                          	##选择电机t1开始进料
        {% if cbs1 == 1 %}                                                      	##t1挤出机是否加载耗材
			{% if inout == 0 %}    													##如果ex挤出机没有加载耗材
            	{action_respond_info("正在为您加载 %d号位耗材" % (tnum))}			  ##显示正在加载耗材
	  	        	wakemove WAKEMOVE=1                                 			##仅唤醒t1挤出机工作
  	 	       		M83
  	 	       		G1 E{printer["gcode_macro var"].s1} F{printer["gcode_macro var"].speed1}	##t1挤出机以s1的距离，speed1的速度工作
					UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						##启动延时GCODE，方便持续检测
		    {% else %}   
					wakeup WAKEUP=1						 							##同时唤醒ex与t1挤出机同步工作
	 				UPDATE_DELAYED_GCODE ID=jinliao DURATION=0						##关闭延时GCODE（因为已经加载到位了）
			{% endif %}  
        {% else %}                                                              	##t1挤出机没有加载耗材的话
            		{action_respond_info("当前 %d号位没有加载耗材" % (tnum))}		  ##显示当前位置没有加载耗材
   		{% endif %}
	{% endif %}
####选择电机t1↑↑↑↑↑↑↑↑↑↑

##选择电机t2↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 2 %}                                                          	##选择电机t2开始进料
        {% if cbs2 == 1 %}                                                      	##t2挤出机是否加载耗材
			{% if inout == 0 %}    													##如果ex挤出机没有加载耗材
            	{action_respond_info("正在为您加载 %d号位耗材" % (tnum))}			  ##显示正在加载耗材
	  	        	wakemove WAKEMOVE=2                                 			##仅唤醒t2挤出机工作
  	 	       		M83
  	 	       		G1 E{printer["gcode_macro var"].s2} F{printer["gcode_macro var"].speed2}	##t2挤出机以s2的距离，speed2的速度工作
					UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						##启动延时GCODE，方便持续检测
		    {% else %}   
					wakeup WAKEUP=2						 							##同时唤醒ex与t2挤出机同步工作
	 				UPDATE_DELAYED_GCODE ID=jinliao DURATION=0						##关闭延时GCODE（因为已经加载到位了）
			{% endif %}  
        {% else %}                                                              	##t2挤出机没有加载耗材的话
            		{action_respond_info("当前 %d号位没有加载耗材" % (tnum))}		  ##显示当前位置没有加载耗材
   		{% endif %}
	{% endif %}
####选择电机t2↑↑↑↑↑↑↑↑↑↑

##选择电机t3↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 3 %}                                                          	##选择电机t3开始进料
        {% if cbs3 == 1 %}                                                      	##t3挤出机是否加载耗材
			{% if inout == 0 %}    													##如果ex挤出机没有加载耗材
            	{action_respond_info("正在为您加载 %d号位耗材" % (tnum))}			  ##显示正在加载耗材
	  	        	wakemove WAKEMOVE=3                                 			##仅唤醒t3挤出机工作
  	 	       		M83
  	 	       		G1 E{printer["gcode_macro var"].s3} F{printer["gcode_macro var"].speed3}	##t3挤出机以s3的距离，speed3的速度工作
					UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						##启动延时GCODE，方便持续检测
		    {% else %}   
					wakeup WAKEUP=3						 							##同时唤醒ex与t3挤出机同步工作
	 				UPDATE_DELAYED_GCODE ID=jinliao DURATION=0						##关闭延时GCODE（因为已经加载到位了）
			{% endif %}  
        {% else %}                                                              	##t3挤出机没有加载耗材的话
            		{action_respond_info("当前 %d号位没有加载耗材" % (tnum))}		  ##显示当前位置没有加载耗材
   		{% endif %}
	{% endif %}
####选择电机t3↑↑↑↑↑↑↑↑↑↑
    
##添加通道数↓↓↓↓↓↓↓↓
#请注意，此模板当中的X则是您所需要添加的通道号

# 	{% if tnum == X %}                                                          
#         {% if cbsX == 1 %}                                                      
# 			{% if inout == 0 %}   
#                 {action_respond_info("正在为您加载 %d号位耗材" % (tnum))}
# 	  	        wakemove WAKEMOVE=X                                
#   	 	        M83
#   	 	        G1 E{printer["gcode_macro var"].sX} F{printer["gcode_macro var"].speedX}   
# 		        UPDATE_DELAYED_GCODE ID=jinliao DURATION=1  
# 			{% else %}
# 				wakeup WAKEUP=X 						 
# 	 			UPDATE_DELAYED_GCODE ID=jinliao DURATION=0
# 			{% endif %}  
#         {% else %}                                                              ##判断耗材未加载
# 				{action_respond_info("当前 %d号位没有加载耗材" % (tnum))}
# 		{% endif %}
# 	{% endif %}
	


##不要动不要删
	{% endif %}
##不要动不要删   
    
    



[delayed_gcode jinliao]
initial_duration: 0
gcode:
	moveout																				##初始化所有远近挤出机
	 {% set tnum= printer['gcode_macro jinliao']['tnum'] %}								##将刚获取的存储在jinliao的tunm
	 {% set state= printer['gcode_macro var']['state'] %}								##获取var中的state（处于任务时state=1，未处于任务时state=0）默认为0
	 {action_respond_info("当正在为您加载 %d号位耗材:二次确认" % (tnum))}				   ##显示文本二次确认
	 {% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}		##设置变量inout获取近程挤出机是否进料

	 {% if tnum == 0 %}																	##如果选择为0号位耗材
 	 	{% if inout == 0 %}          													##如果近程挤出没有检测到耗材
      	 	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
	   		wakemove WAKEMOVE=0      													##仅唤醒t0挤出机工作
  	  		M83
  	  		G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
			##ex挤出机以inputs的距离，inputspeed的速度工作(用于循环检测是否入料)	  
	  	{% else %}   
	 		wakeup WAKEUP=0																##同时唤醒ex与t0挤出机同步工作
			SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={tnum}			##修改换色耗材的值
	 		{action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
			M83
			G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
			##ex挤出机以inputoks的距离，inputokspeed的速度工作(已经入料了，保证通过喉管的距离)	
	  		UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
			{% if state == 1 %}															##如果打印机处于任务中
			# RESTORE_GCODE_STATE NAME=change MOVE=1 MOVE_SPEED=150
			resume																		##恢复打印
			{% else %}																	##如果打印机没有任务
																						##无动作
			{% endif %}
			
		{% endif %}
	 {% endif %}


	{% if tnum == 1 %}																	##如果选择为0号位耗材
 	 	{% if inout == 0 %}          													##如果近程挤出没有检测到耗材
      	 	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
	   		wakemove WAKEMOVE=1      													##仅唤醒t0挤出机工作
  	  		M83
  	  		G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
			##ex挤出机以inputs的距离，inputspeed的速度工作(用于循环检测是否入料)	  
	  	{% else %}   
	 		wakeup WAKEUP=1																##同时唤醒ex与t0挤出机同步工作
			SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={tnum}			##修改换色耗材的值
	 		{action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
			M83
			G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
			##ex挤出机以inputoks的距离，inputokspeed的速度工作(已经入料了，保证通过喉管的距离)	
	  		UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
			{% if state == 1 %}															##如果打印机处于任务中
			resume																		##恢复打印
			{% else %}																	##如果打印机没有任务
																						##无动作
			{% endif %}
			
		{% endif %}
	 {% endif %}
	

	{% if tnum == 2 %}																	##如果选择为0号位耗材
 	 	{% if inout == 0 %}          													##如果近程挤出没有检测到耗材
      	 	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
	   		wakemove WAKEMOVE=2      													##仅唤醒t0挤出机工作
  	  		M83
  	  		G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
			##ex挤出机以inputs的距离，inputspeed的速度工作(用于循环检测是否入料)	  
	  	{% else %}   
	 		wakeup WAKEUP=2																##同时唤醒ex与t0挤出机同步工作
			SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={tnum}			##修改换色耗材的值
	 		{action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
			M83
			G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
			##ex挤出机以inputoks的距离，inputokspeed的速度工作(已经入料了，保证通过喉管的距离)	
	  		UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
			{% if state == 1 %}															##如果打印机处于任务中
			resume																		##恢复打印
			{% else %}																	##如果打印机没有任务
																						##无动作
			{% endif %}
			
		{% endif %}
	 {% endif %}


	{% if tnum == 3 %}																	##如果选择为0号位耗材
 	 	{% if inout == 0 %}          													##如果近程挤出没有检测到耗材
      	 	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
	   		wakemove WAKEMOVE=3      													##仅唤醒t0挤出机工作
  	  		M83
  	  		G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
			##ex挤出机以inputs的距离，inputspeed的速度工作(用于循环检测是否入料)	  
	  	{% else %}   
	 		wakeup WAKEUP=3																##同时唤醒ex与t0挤出机同步工作
			SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={tnum}			##修改换色耗材的值
	 		{action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
			M83
			G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
			##ex挤出机以inputoks的距离，inputokspeed的速度工作(已经入料了，保证通过喉管的距离)	
	  		UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
			{% if state == 1 %}															##如果打印机处于任务中
			resume																		##恢复打印
			{% else %}																	##如果打印机没有任务
																						##无动作
			{% endif %}
			
		{% endif %}
	 {% endif %}

	##添加通道数↓↓↓↓↓↓↓↓
#请注意，此模板当中的X则是您所需要添加的通道号
	# {% if tnum == X %}																	##如果选择为0号位耗材
 	#  	{% if inout == 0 %}          													##如果近程挤出没有检测到耗材
    #   	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1									##启动延时GCODE，方便持续检测
	#    	wakemove WAKEMOVE=X      													##仅唤醒t0挤出机工作
  	#   	M83
  	#   	G1 E{printer["gcode_macro var"].inputs} F{printer["gcode_macro var"].inputspeed}
	# 		##ex挤出机以inputs的距离，inputspeed的速度工作(用于循环检测是否入料)	  
	#   	{% else %}   
	#  		wakeup WAKEUP=X																##同时唤醒ex与t0挤出机同步工作
	# 		SET_GCODE_VARIABLE MACRO=CHANGE_TOOL VARIABLE=nownum VALUE={tnum}			##修改换色耗材的值
	#  		{action_respond_info("已完成耗材加载")}										 ##显示已成功加载耗材
	# 		M83
	# 		G1 E{printer["gcode_macro var"].inputoks} F{printer["gcode_macro var"].inputokspeed}
	# 		##ex挤出机以inputoks的距离，inputokspeed的速度工作(已经入料了，保证通过喉管的距离)	
	#   		UPDATE_DELAYED_GCODE ID=jinliao DURATION=0									##关闭延时GCODE（因为已经加载到位了）
	# 		{% if state == 1 %}															##如果打印机处于任务中
	# 		RESTORE_GCODE_STATE
	#		resume																		##恢复打印
	# 		{% else %}																	##如果打印机没有任务
	# 																					##无动作
	# 		{% endif %}
			
	# 	{% endif %}
	#  {% endif %}