[gcode_macro prevent_idle]
variable_tnum:0
variable_retries: 0
variable_steps: 0
variable_number_of_steps: 3  # 您可以根据需要调整这个值
gcode:
	moveout		##初始化所有远近挤出机
    {% set tnum = params.IN_NUM|default(0)|int %}									##设置变量tnum用于选择预进料电机t0,t1,t2....
	{% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {% set svvc = svv.currentextruder %}                                            #变量名长度优化
    {% set ft= printer['gcode_macro var']['failuretime']+1 %}		
    SET_GCODE_VARIABLE MACRO=var VARIABLE=failuretime VALUE={ft}
        {action_respond_info("当前为 %d 号位尝试退料,并让 %d 号位颜色进料" % (svvc, tnum))}		
	{% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}  	##设置变量inout获取近程挤出机是否进料
        {action_respond_info("第1次触发INOUT保护程序:尝试多次进退料")}
        wakeup WAKEUP={svvc}
        M83
        G1 E{printer["gcode_macro var"].outs} F{printer["gcode_macro var"].inputokspeed} 
        G1 E{printer["gcode_macro var"].purge} F{printer["gcode_macro var"].inputokspeed} 
        G1 E{printer["gcode_macro var"].outs} F{printer["gcode_macro var"].inputokspeed} 
        UPDATE_DELAYED_GCODE ID=strong_unload DURATION=5									##启动延时GCODE，方便持续检测		

[gcode_macro repeat_loading]
description:备份四模块进料								 							 ##中文注释
#variable_tnum:0										 								##用于临时存储变量      
gcode:
    #{% set BED_TEMP = params.BED|default(50)|float %}
    #M140 S{ BED_TEMP}    #温度恢复
    moveout											 								##初始化所有远近挤出机
	{% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
    {action_respond_info("当前为 %d号位颜色进料——INOUT备份进料程序" % (svv.tempextruder))}		
    tt{svv.tempextruder}                                                          ###温度设定
    wakeup WAKEUP={svv.tempextruder}  
	UPDATE_DELAYED_GCODE ID=jinliao DURATION=1 						           ##启动延时GCODE，方便持续检测

    #以下内容是change_tool的搬移，主要为了恢复各种参数变量的状态，防止下一次切换颜色发生错误
    #below part is copy from change_tool marco. to prepare the correct value for every parameter, which is helpful for the color change.
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={svv.tempextruder}      
    Set_Rotation                                             

    {% if state == 1 %}                                   
          SET_GCODE_VARIABLE MACRO=var VARIABLE=runout VALUE={2}    
          buffer_start   
    {% endif %}  

[delayed_gcode strong_unload]
initial_duration: 0
gcode:
    {% set retries = printer['gcode_macro prevent_idle']['retries'] %}
    {% set steps = printer['gcode_macro prevent_idle']['steps'] %}
    {% set number_of_steps = printer['gcode_macro prevent_idle']['number_of_steps'] %}
  
     {% set svv = printer.save_variables.variables %}                                ###获取断电时候的耗材的序号 “0、1、2、3”
     {% set state= printer['gcode_macro var']['state'] %}								##获取var中的state（处于任务时state=1，未处于任务时state=0）默认为0
     {% set inout = printer['filament_switch_sensor INOUT'].filament_detected %}		##设置变量inout获取近程挤出机是否进料
     {% set rt= printer['gcode_macro var']['retrytime']+1 %}		
      {% if inout == 1  %}          													##如果近程挤出没有检测到耗材，强制刷新持续时长
          G92 E0
          G1 E-10 F600
          {action_respond_info("⚠️出错！尝试退料同时防止机器待机，如不成功，请手动排除故障，并恢复打印")}
          M117 error,try to unload, or unload manually
          G4 P100
          UPDATE_DELAYED_GCODE ID=strong_unload DURATION=5
          SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=steps VALUE={steps + 1}
  
              #created by 7010, for too many times retries checking
              {% if steps < number_of_steps %}
                  UPDATE_DELAYED_GCODE ID=strong_unload DURATION=1  ## 启动延时GCODE，方便持续检测
              {% else %}
                  G92 E0
                  G1 E-{printer["gcode_macro var"].inputs * steps} F{printer["gcode_macro var"].inputspeed}  ## 回抽的距离是步进距离 * 已经步进的次数
                  G4 P100
                  SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=steps VALUE=0
                  SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=retries VALUE={retries + 1}
                  UPDATE_DELAYED_GCODE ID=strong_unload DURATION=1  ## 启动延时GCODE，方便持续检测      
              
                  {% if retries >= 6 %}
                      M104 S20
                      SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=retries VALUE=0
                      SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=steps VALUE=0
                      {action_respond_info("❌错误：插入失败，重试次数过多")}
                      UPDATE_DELAYED_GCODE ID=strong_unload DURATION=0
                      #故障2排除宏，持续更新中 bug_fix marco, need to update later
                  {% endif %}
  
              {% endif %}
                          
      {% else %}   
          SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=retries VALUE=0
          SET_GCODE_VARIABLE MACRO=prevent_idle VARIABLE=steps VALUE=0
          {action_respond_info("故障排除！！！撒花~~~~~~~~~~~")}						##显示已成功加载耗材
          M117 Successful!flowers!!!
          M117 continue printing...
          UPDATE_DELAYED_GCODE ID=strong_unload DURATION=0							##关闭延时GCODE（因为已经加载到位了）
          SET_GCODE_VARIABLE MACRO=var VARIABLE=retrytime VALUE={rt}
          G1 E{printer["gcode_macro var"].outs-50} F{printer["gcode_macro var"].inputokspeed}
          repeat_loading
      {% endif %}
        

