##以下代码通过针对runout变量的判断来决定是否激活续料程序
##优势，断料检测和耗材切换检测只通过一个微动开关实现
##注意：在ams_lite程序调试完毕之前，请勿激活以下代码。
[filament_switch_sensor INOUT]	#耗材开关传感器。支持使用开关传感器（如限位开关）进行耗材插入和耗尽检测。
#这是个分体代码,其余的功能定义在hardware里面完成
runout_gcode:  
    {% set runout= printer['gcode_macro var']['runout'] %}				##获取var中的runout（处于change_tool状态下为1）默认为0
    {% set state= printer['gcode_macro var']['state'] %}	
    {% set svv = printer.save_variables.variables %}                                
    {% set svvc = svv.currentextruder %}     
    {% set cas = printer['filament_switch_sensor cas'~ svvc].filament_detected %}
    {% set cbs = printer['filament_switch_sensor cbs'~ svvc].filament_detected %}
    {action_respond_info("cas通道开关状态%d" % (cas))}    
    {action_respond_info("cbs通道开关状态%d" % (cbs))}   
    {% if state == 1 and runout == 2 %} 
        {% if cas == 0 and cbs == 0 %} 
           pause                                            
           {action_respond_info("Filament %s runout, will choose instead tunnel" % (svvc))}
           M117 Filament runout
           SET_GCODE_VARIABLE MACRO=var VARIABLE=purgeline VALUE={0} ##重置属性
           #I{svvc}          
           Filamentinsteadof
        {% else %}
           {action_respond_info("Tunnel %s recheck, filament still exist, ignore filament continue processing" % (svvc))}
        {% endif %}  
    {% endif %} 
insert_gcode:

[gcode_macro reset_continue]
gcode:
    {% for num in range(0, (printer["gcode_macro var"].tunnel)) %}
           SAVE_VARIABLE VARIABLE=continue{num} VALUE=0
    {% endfor %}

[gcode_macro Filamentinsteadof]
gcode:
    {% set svv = printer.save_variables.variables %}                                
    {% set svvc = svv.currentextruder %}   
    {% set insteadof=printer["gcode_macro var"]['filament'~ svvc] %}
    {% set tinstd = printer.configfile.settings['extruder_stepper t'~ insteadof] %}
    SAVE_VARIABLE VARIABLE=continue0 VALUE=1       ##mark the tunnel 0 is already use the instead filament
    SAVE_VARIABLE VARIABLE=currentextruder VALUE={insteadof} ##用文件记记录下当前的挤出机号，便于下次使用
    #Set_Rotation{insteadof}
    {% set original = tinstd.rotation_distance %}
    SAVE_VARIABLE VARIABLE=rd VALUE={original}  #把最后一次激活的挤出的rotation记录在外部文件里
    tt{insteadof}
    jinliao IN_NUM={insteadof}

[gcode_macro MiuMiuReset]
description:如果已经给耗材耗尽的通道续上材料,可以通过此宏复位,打印过程中再选用此通道时,将不再使用替换颜色!!!
gcode:
    {% set a= params.RSTTUNNEL|default(0)|int %} 
    SAVE_VARIABLE VARIABLE=continue{a} VALUE=0 
    {action_respond_info("复位通道 %d " % (a))} 

[gcode_macro EndLessset]
description:如果打印过程中需要更改预设的备选耗材,可以使用此宏
gcode:
    {% set a= params.ORIGINALTUNNEL|default(0)|int %} 
    {% set b= params.INSTEADTUNNEL|default(0)|int %} 
    SET_GCODE_VARIABLE MACRO=var VARIABLE=filament{a} VALUE={b}
    {action_respond_info("用通道 %d 来作为通道 %d 的续料备份" % (b,a))} 

