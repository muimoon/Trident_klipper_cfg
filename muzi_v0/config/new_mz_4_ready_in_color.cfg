##########################################################################################################################
##预进料——耗材在料架上加载至出口位置————↓↓↓↓↓↓
##########################################################################################################################
##https://jinja.palletsprojects.com/en/2.10.x/templates/语法


[gcode_macro yujinliao]
description: 预进料							 	##中文注释
variable_tnum:0									##存储数据
							
gcode:

	{% set tnum = params.TNUM|default(0)|int %}										##设置变量tnum用于选择预进料电机t0,t1,t2....			
	{action_respond_info("当前选择为 %d号位颜色" % (tnum))}							  ##使用action显示文本信息与变量tnum		
		
	##设置获取T0通道限位信息
	{% set cas0 = printer['filament_switch_sensor cas0'].filament_detected %} 
	{% set cbs0= printer['filament_switch_sensor cbs0'].filament_detected %} 
	##设置获取T1通道限位信息
	{% set cas1 = printer['filament_switch_sensor cas1'].filament_detected %} 
	{% set cbs1= printer['filament_switch_sensor cbs1'].filament_detected %} 
	 ##设置获取T2通道限位信息
	{% set cas2 = printer['filament_switch_sensor cas2'].filament_detected %} 
	{% set cbs2= printer['filament_switch_sensor cbs2'].filament_detected %} 
	##设置获取T3通道限位信息
	{% set cas3 = printer['filament_switch_sensor cas3'].filament_detected %} 
	{% set cbs3= printer['filament_switch_sensor cbs3'].filament_detected %} 
	
	colorhotup																		##调用预升温宏文件
	
	SET_GCODE_VARIABLE MACRO=yujinliao VARIABLE=tnum VALUE={tnum}					##设置宏yujinliao中的tnum变量，数值为上文获取的tnum，预备给下文使用
		
##选择电机t0↓↓↓↓↓↓↓↓↓↓↓↓  
	{% if tnum == 0 %}																##使用action显示文本信息与变量tnum,并二次确认选择
			{action_respond_info("当前选择为 %d号位颜色:二次确认" % (tnum))}
				{% if cas0 == 0 %}   												##如果入料口处没有加载耗材
	 					wakemove WAKEMOVE={tnum}									##仅唤醒t0挤出机工作
  	 					M83
  	 					G1 E{printer["gcode_macro var"].readyins} F{printer["gcode_macro var"].readyinspeed}	
																					##挤出机以readyins的距离，readyinspeed的速度工作
						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   				##启动延时GCODE，方便持续检测
				{% else %}
					{% set ioswitch0 = printer['gcode_macro var']['ioswitch0'] %}	##获取var变量中的ioswitch
					{% if cbs0 == 0 and ioswitch0 == 0 %}							##如果出料口处没有加载耗材且ioswitch也没加载
			 			UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1  				##启动延时GCODE，方便持续检测
					{% else %}
						{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}	  ##显示已经成功加载
					{% endif %}
				{% endif %}
	{% endif %}
####选择电机t0↑↑↑↑↑↑↑↑↑↑

##选择电机t1↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 1 %}																##使用action显示文本信息与变量tnum,并二次确认选择
			{action_respond_info("当前选择为 %d号位颜色:二次确认" % (tnum))}
				{% if cas1 == 0 %}   												##如果入料口处没有加载耗材
	 					wakemove WAKEMOVE={tnum}										##仅唤醒t1挤出机工作
  	 					M83
  	 					G1 E{printer["gcode_macro var"].readyins} F{printer["gcode_macro var"].readyinspeed}	
																					##挤出机以readyins的距离，readyinspeed的速度工作
						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   				##启动延时GCODE，方便持续检测
				{% else %}
					{% set ioswitch1 = printer['gcode_macro var']['ioswitch1'] %}	##获取var变量中的ioswitch
					{% if cbs1 == 0 and ioswitch1 == 0 %}							##如果出料口处没有加载耗材且ioswitch也没加载
			 			UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1  				##启动延时GCODE，方便持续检测
					{% else %}
						{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}	  ##显示已经成功加载
					{% endif %}
				{% endif %}
	{% endif %}
####选择电机t1↑↑↑↑↑↑↑↑↑↑

##选择电机t2↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 2 %}																##使用action显示文本信息与变量tnum,并二次确认选择
			{action_respond_info("当前选择为 %d号位颜色:二次确认" % (tnum))}
				{% if cas2 == 0 %}   												##如果入料口处没有加载耗材
	 					wakemove WAKEMOVE={tnum}										##仅唤醒t2挤出机工作
  	 					M83
  	 					G1 E{printer["gcode_macro var"].readyins} F{printer["gcode_macro var"].readyinspeed}	
																					##挤出机以readyins的距离，readyinspeed的速度工作
						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   				##启动延时GCODE，方便持续检测
				{% else %}
					{% set ioswitch2 = printer['gcode_macro var']['ioswitch2'] %}	##获取var变量中的ioswitch
					{% if cbs2 == 0 and ioswitch2 == 0 %}							##如果出料口处没有加载耗材且ioswitch也没加载
			 			UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1  				##启动延时GCODE，方便持续检测
					{% else %}
						{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}	  ##显示已经成功加载
					{% endif %}
				{% endif %}
	{% endif %}
####选择电机t2↑↑↑↑↑↑↑↑↑↑

##选择电机t3↓↓↓↓↓↓↓↓↓↓↓↓
	{% if tnum == 3 %}																##使用action显示文本信息与变量tnum,并二次确认选择
			{action_respond_info("当前选择为 %d号位颜色:二次确认" % (tnum))}
				{% if cas3 == 0 %}   												##如果入料口处没有加载耗材
	 					wakemove WAKEMOVE={tnum}										##仅唤醒t3挤出机工作
  	 					M83
  	 					G1 E{printer["gcode_macro var"].readyins} F{printer["gcode_macro var"].readyinspeed}	
																					##挤出机以readyins的距离，readyinspeed的速度工作
						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   				##启动延时GCODE，方便持续检测
				{% else %}
					{% set ioswitch3 = printer['gcode_macro var']['ioswitch3'] %}	##获取var变量中的ioswitch
					{% if cbs3 == 0 and ioswitch3 == 0 %}							##如果出料口处没有加载耗材且ioswitch也没加载
			 			UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1  				##启动延时GCODE，方便持续检测
					{% else %}
						{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}	  ##显示已经成功加载
					{% endif %}
				{% endif %}
	{% endif %}
####选择电机t3↑↑↑↑↑↑↑↑↑↑
    
    
##添加通道数↓↓↓↓↓↓↓↓
#请注意，此模板当中的X则是您所需要添加的通道号(需要修改7处X)

	# {% if tnum == X %}																##使用action显示文本信息与变量tnum,并二次确认选择
	# 		{action_respond_info("当前选择为 %d号位颜色:二次确认" % (tnum))}
	# 			{% if casX == 0 %}   												##如果入料口处没有加载耗材
	#  					wakemove WAKEMOVE=X											##仅唤醒t0挤出机工作
  	#  					M83
  	#  					G1 E{printer["gcode_macro var"].readyins} F{printer["gcode_macro var"].readyinspeed}	
	# 																				##挤出机以readyins的距离，readyinspeed的速度工作
	# 					UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   				##启动延时GCODE，方便持续检测
	# 			{% else %}
	# 				{% set ioswitchX = printer['gcode_macro var']['ioswitchX'] %}	##获取var变量中的ioswitch
	# 				{% if cbsX == 0 and ioswitchX == 0 %}							##如果出料口处没有加载耗材且ioswitch也没加载
	# 		 			UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1  				##启动延时GCODE，方便持续检测
	# 				{% else %}
	# 					{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}	  ##显示已经成功加载
	# 				{% endif %}
	# 			{% endif %}
	# {% endif %}

##添加通道数↑↑↑↑↑↑↑↑
##在此以上添加通道数↑↑↑↑↑↑↑↑



[delayed_gcode yujinliao]
initial_duration: 0																			##是否启动延迟Gcode，预进料，默认为0（关闭）
gcode:
	moveout
	
	{% set tnum= printer['gcode_macro yujinliao']['tnum'] %}								##获取上文保存的变量
	{action_respond_info("当前选择为 %d号位颜色:三次确认" % (tnum))}						  ##使用action显示文本信息与变量tnum,并三次确认选择
	
	 ##设置获取T0通道限位信息
	{% set cas0 = printer['filament_switch_sensor cas0'].filament_detected %} 
	{% set cbs0= printer['filament_switch_sensor cbs0'].filament_detected %} 
	##设置获取T1通道限位信息
	{% set cas1 = printer['filament_switch_sensor cas1'].filament_detected %} 
	{% set cbs1= printer['filament_switch_sensor cbs1'].filament_detected %} 
	 ##设置获取T2通道限位信息
	{% set cas2 = printer['filament_switch_sensor cas2'].filament_detected %} 
	{% set cbs2= printer['filament_switch_sensor cbs2'].filament_detected %} 
	##设置获取T3通道限位信息
	{% set cas3 = printer['filament_switch_sensor cas3'].filament_detected %} 
	{% set cbs3= printer['filament_switch_sensor cbs3'].filament_detected %} 
	
	##如果tnum==0则选择预进料电机t0
	{% if tnum == 0 %}											
							{% if cbs0 == 0 %}  										 	  							##如果出料口处没有加载耗材
							wakemove WAKEMOVE=0																			##仅唤醒t0挤出机工作
  	 						M83
  	 						G1 E{printer["gcode_macro var"].readyinoks} F{printer["gcode_macro var"].readyinokspeed}	#启动‘循环’预入料的距离和速度
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   					  							##设置延迟Gcode，预进料，为1——>启动 
							{% else %}
							{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}								  	  ##使用action显示文本信息与变量tnum,成功预加载
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=0 				 								##设置延迟Gcode，预进料，为0——>关闭					
							moveout	
							{% set nownum= printer['gcode_macro CHANGE_TOOL']['nownum'] %}
							SET_GCODE_VARIABLE MACRO=var VARIABLE=ioswitch0 VALUE={1}	  								##修改变量值，完成预进料	
							{% endif %} 
	{% endif %}
	##如果tnum==1则选择预进料电机t1
	{% if tnum == 1 %}
							{% if cbs1 == 0 %}  										 	  							##如果出料口处没有加载耗材
							wakemove WAKEMOVE=1																			##仅唤醒t1挤出机工作
  	 						M83
  	 						G1 E{printer["gcode_macro var"].readyinoks} F{printer["gcode_macro var"].readyinokspeed}	#启动‘循环’预入料的距离和速度
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   					  							##设置延迟Gcode，预进料，为1——>启动 
							{% else %}
							{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}										##使用action显示文本信息与变量tnum,成功预加载
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=0 				  								  ##设置延迟Gcode，预进料，为0——>关闭
							moveout
							{% set nownum= printer['gcode_macro CHANGE_TOOL']['nownum'] %}	
							SET_GCODE_VARIABLE MACRO=var VARIABLE=ioswitch1 VALUE={1}	  								  ##修改变量值，完成预进料				
							{% endif %} 			
	{% endif %}
##如果tnum==2则选择预进料电机t2
	{% if tnum == 2 %}	
							{% if cbs2 == 0 %}  										 	  							 ##如果出料口处没有加载耗材
							wakemove WAKEMOVE=2																			##仅唤醒t2挤出机工作
  	 						M83
  	 						G1 E{printer["gcode_macro var"].readyinoks} F{printer["gcode_macro var"].readyinokspeed}	#启动‘循环’预入料的距离和速度
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   					  							##设置延迟Gcode，预进料，为1——>启动 
							{% else %}
							{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}									  ##使用action显示文本信息与变量tnum,成功预加载
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=0 				  								##设置延迟Gcode，预进料，为0——>关闭
							moveout
							{% set nownum= printer['gcode_macro CHANGE_TOOL']['nownum'] %}			
							SET_GCODE_VARIABLE MACRO=var VARIABLE=ioswitch2 VALUE={1}	  								##修改变量值，完成预进料					
							{% endif %} 
	{% endif %}
##如果tnum==3则选择预进料电机t3
	{% if tnum == 3 %}
							{% if cbs3 == 0 %}  										 	  							##如果出料口处没有加载耗材
							wakemove WAKEMOVE=3																			##仅唤醒t3挤出机工作
  	 						M83
  	 						G1 E{printer["gcode_macro var"].readyinoks} F{printer["gcode_macro var"].readyinokspeed}	#启动‘循环’预入料的距离和速度
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   					  							##设置延迟Gcode，预进料，为1——>启动 
							{% else %}
							{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}									  ##使用action显示文本信息与变量tnum,成功预加载
							UPDATE_DELAYED_GCODE ID=yujinliao DURATION=0 				  								##设置延迟Gcode，预进料，为0——>关闭
							moveout
							{% set nownum= printer['gcode_macro CHANGE_TOOL']['nownum'] %}
							SET_GCODE_VARIABLE MACRO=var VARIABLE=ioswitch3 VALUE={1}	  								##修改变量值，完成预进料	
							{% endif %} 
	{% endif %}


##添加通道数↓↓↓↓↓↓↓↓
#请注意，此模板当中的X则是您所需要添加的通道号(需要修改4处X)

	# {% if tnum == X %}

							
	# 						{% if cbsX == 0 %}  										 	  							##如果出料口处没有加载耗材

	# 						wakemove WAKEMOVE=X
  	#  						M83
  	#  						G1 E{printer["gcode_macro var"].readyinoks} F{printer["gcode_macro var"].readyinokspeed}	#启动‘循环’预入料的距离和速度
	# 						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=1   					  							##设置延迟Gcode，预进料，为1——>启动 

	# 						{% else %}

	# 						{action_respond_info("已经成功预加载 %d号位耗材" % (tnum))}									  ##使用action显示文本信息与变量tnum,成功预加载
	# 						UPDATE_DELAYED_GCODE ID=yujinliao DURATION=0 				  								##设置延迟Gcode，预进料，为0——>关闭
	# 						moveout
	# 						{% set nownum= printer['gcode_macro CHANGE_TOOL']['nownum'] %}
							
	# 						SET_GCODE_VARIABLE MACRO=var VARIABLE=ioswitchX VALUE={1}	  								##修改变量值，完成预进料
								
	# 						{% endif %} 
					
	# {% endif %}

##添加通道数↑↑↑↑↑↑↑↑
##在此以上添加通道数↑↑↑↑↑↑↑↑


##########################################################################################################################
##预进料——耗材在料架上加载至出口位置————↑↑↑↑↑↑
##########################################################################################################################
